''' implements a tkinter frame with multiple directory selectors '''
import tkinter as tk


class ReadOnlyInfoFrame(tk.Frame):
    ''' tkinter frame for displaying info in the format '<key> <value>' '''
    def __init__(self, master, key, value):
        super().__init__(master)
        self.master = master
        
        self._key = tk.StringVar()
        self._key.set(key)

        self._value = tk.StringVar()
        self._value.set(value)

        self._create_widgets()

    def _create_widgets(self):
        self._key_label = tk.Label(self, textvariable=self._key)
        self._key_label.pack(side='left')

        self._value_label = tk.Label(self, textvariable=self._value)
        self._value_label.pack(side='right')

    @property
    def key(self):
        return self._key.get()

    @property
    def value(self):
        return self._value.get()

    @key.setter
    def key(self, key: str):
        self._key.set(key)

    @value.setter
    def value(self, value: str):
        self._value.set(value)


class InfoFrame(tk.Frame):
    ''' tkinter frame for displaying file info '''
    def __init__(self, master):
        super().__init__(master)
        self.master = master

        self._create_widgets()

    def _create_widgets(self):

        # this data will be generated by future code
        immutable_info = {
            '(SI) File Size:': 'KB 17.108',
            '(IEC) File Size:': 'KiB 16.724',
            'Last Accessed:': '2024-06-21 00:00:00',
            'Last Modified:': '2023-01-26 20:50:36',
            'Time Created:': '2023-01-26 20:50:36',
            'md5 Hash:': 'b3f55a97a806d730a4470a4e2564c681'
        }

        self._read_only_frames = [ReadOnlyInfoFrame(self, key, value) for key, value in immutable_info.items()]
        for frame in self._read_only_frames:
            frame.pack()
